// flow-typed signature: 996523f2b2e738308338e028e81537c6
// flow-typed version: <<STUB>>/electron_v6.0.9/flow_v0.107.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'electron'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

type AppPathNames =
  | 'home'
  | 'appData'
  | 'userData'
  | 'temp'
  | 'exe'
  | 'module'
  | 'desktop'
  | 'documents'
  | 'downloads'
  | 'music'
  | 'pictures'
  | 'videos'
  | 'logs';

declare type BrowserWindowConstructorOptions = {
  width?: number,
  height?: number,
  x?: number,
  y?: number,
  show?: boolean,
  webPreferences?: {
    preload?: string,
    nodeIntegration?: boolean
  }
};

declare module 'electron' {
  declare type BrowserWindowBounds = {
    x: number,
    y: number,
    width: number,
    height: number
  };

  declare class BrowserWindow {
    constructor(options?: BrowserWindowConstructorOptions): BrowserWindow;
    loadURL(url: string): void;
    on(event: string, handler: Function): void;
    show(): void;
    focus(): void;
    maximize(): void;
    isMaximized(): boolean;
    getBounds(): BrowserWindowBounds;
  }

  declare class app {
    static quit(): void;
    static exit(exitCode?: Number): void;
    static isReady(): boolean;
    static whenReady(): Promise<void>;
    static focus(): void;
    static hide(): void;
    static show(): void;
    static setAppLogsPath(path?: string): void;
    static getAppPath(): string;
    static getPath(name: AppPathNames): string;
    static on(event: string, handler: Function): void;
  }
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'electron/cli' {
  declare module.exports: any;
}

declare module 'electron/install' {
  declare module.exports: any;
}

// Filename aliases
declare module 'electron/cli.js' {
  declare module.exports: $Exports<'electron/cli'>;
}
declare module 'electron/index' {
  declare module.exports: $Exports<'electron'>;
}
declare module 'electron/index.js' {
  declare module.exports: $Exports<'electron'>;
}
declare module 'electron/install.js' {
  declare module.exports: $Exports<'electron/install'>;
}
