{
  "license": "CC0-1.0",
  "name": "emp",
  "version": "0.2.3",
  "private": true,
  "description": "Electron Music Player",
  "author": "Kevin Frei <kevinfrei@hotmail.com>",
  "build": {
    "appId": "com.music-player.freik",
    "productName": "Electron Music Player",
    "mac": {
      "icon": "build/icon.icns"
    }
  },
  "main": "public/electron.js",
  "homepage": "./",
  "dependencies": {
    "@fluentui/react": "^7.153.4",
    "@freik/core-utils": "^0.8.2",
    "@freik/media-utils": "^0.7.1",
    "@uifabric/icons": "^7.5.17",
    "@uifabric/react-hooks": "^7.13.9",
    "album-art": "^2.0.2",
    "electron-is-dev": "^1.2.0",
    "electron-react-devtools": "^0.5.3",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "react-scripts": "4.0.1",
    "recoil": "^0.1.2",
    "source-map-explorer": "^2.5.1"
  },
  "husky": {
    "hooks": {
      "pre-commit": "yarn format",
      "pre-push": "yarn chk"
    }
  },
  "scripts": {
    "analyze": "yarn react-scripts build && yarn source-map-explorer 'build/static/js/*.js'",
    "react-start": "react-scripts start",
    "react-build": "react-scripts build",
    "react-eject": "react-scripts eject",
    "electron-build": "electron-builder",
    "release": "yarn build && electron-builder --publish=always",
    "clean": "rimraf public/main public/*.js public/*.js.map .ts*.tsbuildinfo",
    "build": "yarn clean && yarn prepare && yarn react-build",
    "start": "yarn prepare && concurrently --kill-others \"cross-env BROWSER=none yarn react-start\" \"wait-on http://localhost:3000 && electron .\"",
    "prepare": "tsc -p tsconfig.static.json && tsc -p tsconfig.render.json",
    "tsc": "tsc",
    "compile": "tsc --noEmit && tsc --noEmit -p tsconfig.static.json && tsc --noEmit -p tsconfig.render.json",
    "test": "jest --config jest.jsdom.config.js && jest --config jest.node.config.js --passWithNoTests",
    "testui": "jest --config jest.jsdom.config.js --watch",
    "testnode": "jest --config jest.node.config.js --watch",
    "format": "prettier --write \"src/**/*.ts\" \"src/**/*.tsx\" \"static/**/*.ts\" \"*.js\" \"*.json\" \"*.md\"",
    "lint": "yarn eslint --fix --ext .ts --ext .tsx ./",
    "chk": "yarn format && yarn compile && yarn lint && yarn test",
    "linecount": "git ls-files|grep \".tsx\\?$\"|grep -v \"__tests__\"|xargs wc -l"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "browser": true,
      "node": true
    },
    "extends": [
      "react-app",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "prettier",
      "prettier/@typescript-eslint"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": "tsconfig.json",
      "sourceType": "module"
    },
    "plugins": [
      "@typescript-eslint",
      "react",
      "react-hooks"
    ],
    "overrides": [
      {
        "files": [
          "static/renderer.ts"
        ],
        "parserOptions": {
          "project": "tsconfig.render.json"
        }
      },
      {
        "files": [
          "static/main/**/*.ts",
          "static/electron.ts",
          "static/main.d.ts"
        ],
        "parserOptions": {
          "project": "tsconfig.static.json"
        }
      }
    ],
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": [
        "error",
        {
          "default": "array"
        }
      ],
      "@typescript-eslint/ban-types": [
        "error",
        {
          "types": {
            "Object": {
              "message": "Avoid using the `Object` type. Did you mean `object`?"
            },
            "Function": {
              "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
            },
            "Boolean": {
              "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
            },
            "Number": {
              "message": "Avoid using the `Number` type. Did you mean `number`?"
            },
            "String": {
              "message": "Avoid using the `String` type. Did you mean `string`?"
            },
            "Symbol": {
              "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
            }
          }
        }
      ],
      "@typescript-eslint/consistent-type-assertions": "error",
      "@typescript-eslint/dot-notation": "error",
      "@typescript-eslint/indent": "off",
      "@typescript-eslint/member-delimiter-style": [
        "off",
        {
          "multiline": {
            "delimiter": "none",
            "requireLast": true
          },
          "singleline": {
            "delimiter": "semi",
            "requireLast": false
          }
        }
      ],
      "@typescript-eslint/naming-convention": [
        "warn",
        {
          "selector": "default",
          "format": [
            "camelCase"
          ],
          "leadingUnderscore": "allow",
          "trailingUnderscore": "allow"
        },
        {
          "selector": "variable",
          "format": [
            "camelCase",
            "UPPER_CASE"
          ],
          "leadingUnderscore": "allow",
          "trailingUnderscore": "allow"
        },
        {
          "selector": "typeLike",
          "format": [
            "PascalCase"
          ]
        },
        {
          "selector": "function",
          "format": [
            "camelCase",
            "PascalCase"
          ],
          "leadingUnderscore": "forbid",
          "trailingUnderscore": "forbid"
        }
      ],
      "@typescript-eslint/no-empty-function": "warn",
      "@typescript-eslint/no-empty-interface": "error",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-namespace": "error",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/no-parameter-properties": "off",
      "@typescript-eslint/no-unused-expressions": "warn",
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/no-var-requires": "error",
      "@typescript-eslint/prefer-for-of": "warn",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/quotes": "off",
      "@typescript-eslint/semi": [
        "off",
        null
      ],
      "@typescript-eslint/triple-slash-reference": [
        "error",
        {
          "path": "always",
          "types": "prefer-import",
          "lib": "always"
        }
      ],
      "@typescript-eslint/type-annotation-spacing": "off",
      "@typescript-eslint/unified-signatures": "error",
      "arrow-parens": [
        "off",
        "always"
      ],
      "brace-style": [
        "off",
        "off"
      ],
      "comma-dangle": "off",
      "complexity": "off",
      "constructor-super": "error",
      "eol-last": "off",
      "eqeqeq": [
        "error",
        "smart"
      ],
      "guard-for-in": "error",
      "id-blacklist": [
        "error",
        "any",
        "Number",
        "number",
        "String",
        "string",
        "Boolean",
        "boolean",
        "Undefined",
        "undefined"
      ],
      "id-match": "error",
      "linebreak-style": "off",
      "max-classes-per-file": [
        "error",
        1
      ],
      "max-len": "off",
      "new-parens": "off",
      "newline-per-chained-call": "off",
      "no-bitwise": "error",
      "no-caller": "error",
      "no-cond-assign": "error",
      "no-console": "warn",
      "no-debugger": "warn",
      "no-empty": "warn",
      "no-eval": "error",
      "no-extra-semi": "off",
      "no-fallthrough": "off",
      "no-invalid-this": "off",
      "no-irregular-whitespace": "off",
      "no-multiple-empty-lines": "off",
      "no-new-wrappers": "error",
      "no-shadow": [
        "error",
        {
          "hoist": "all"
        }
      ],
      "no-throw-literal": "error",
      "no-trailing-spaces": "off",
      "no-undef-init": "error",
      "no-underscore-dangle": "error",
      "no-unsafe-finally": "error",
      "no-unused-labels": "error",
      "no-var": "error",
      "object-shorthand": "error",
      "one-var": [
        "error",
        "never"
      ],
      "prefer-const": "warn",
      "quote-props": "off",
      "radix": "error",
      "react/jsx-curly-spacing": "off",
      "react/jsx-equals-spacing": "off",
      "react/jsx-wrap-multilines": "off",
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "warn",
      "space-before-function-paren": "off",
      "space-in-parens": [
        "off",
        "never"
      ],
      "spaced-comment": [
        "error",
        "always",
        {
          "markers": [
            "/"
          ]
        }
      ],
      "use-isnan": "error",
      "valid-typeof": "off"
    }
  },
  "browserslist": {
    "production": [
      "last 1 chrome version"
    ],
    "development": [
      "last 1 chrome version"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.12.9",
    "@babel/plugin-transform-react-jsx": "^7.12.7",
    "@testing-library/jest-dom": "^5.11.6",
    "@testing-library/react": "^11.2.2",
    "@types/electron-devtools-installer": "^2.2.0",
    "@types/jest": "^26.0.16",
    "@types/node": "^14.14.10",
    "@types/react": "^17.0.0",
    "@types/react-dom": "^17.0.0",
    "@types/react-virtualized-auto-sizer": "^1.0.0",
    "@types/react-window": "^1.8.2",
    "@types/recoil": "^0.0.1",
    "@typescript-eslint/eslint-plugin": "^4.9.0",
    "@typescript-eslint/parser": "^4.9.0",
    "babel-eslint": "^10.1.0",
    "concurrently": "^5.3.0",
    "cross-env": "^7.0.3",
    "electron": "^11.0.3",
    "electron-builder": "^22.9.1",
    "electron-devtools-installer": "^3.1.1",
    "eslint-config-prettier": "^7.0.0",
    "eslint-config-react-app": "^6.0.0",
    "eslint-plugin-flowtype": "^5.2.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-prettier": "^3.2.0",
    "eslint-plugin-react": "^7.21.5",
    "eslint-plugin-react-hooks": "^4.2.0",
    "husky": "^4.3.4",
    "jest-transform-css": "^2.1.0",
    "prettier": "^2.2.1",
    "react-test-renderer": "^17.0.1",
    "rimraf": "^3.0.2",
    "svg-react-loader": "^0.4.6",
    "ts-jest": "^26.4.4",
    "typescript": "^4.1.2",
    "wait-on": "^5.2.0"
  }
}
